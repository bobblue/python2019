#-*- coding: utf-8 -*-
import ngram
import pandas as pd

test_raw = ['올리브영','CJ mall','토니모리','샤넬','색조화장품 사용 안함','위메프','px','미샤','올리브영','올리브영','조성하뷰티\n16브랜드','면세점이나 화장품가게','피치씨','아리따움','오휘','올리브영','g마켓','쿠팡','뷰티포인트몰','더페이스샵','올리브영','미샤','이니스프리','홈앤쇼핑','맥','올리브영','올리브영','클럽클리오','클리오','이마트 트레이더스','올리브영','올리브영 / 이니스프리','토니모리','쿠팡','올리브영','올리브영','미샤','홀리카 섀도우','올리브영','11번가','스타일난다 립틴트','토니모리','에뛰드 하우스','에뛰드하우스','올리브영','비욘드','홀리카홀리카','이니스프리','올리브영','올리브영','올리브영','올리브영','디올','올리브영','더 페이스샵','아마존','올리브영','올리브영','매장','네이처리퍼블릭 매장','더바디샵','Mac','화진화장품매장','없음','Ak몰','면세점','올리브영','샤넬','아리따움','올리브영','롭스','없음.','올리브영','면세점','텐바이텐/에이프릴스킨','아리따움','이니스프리','미샤','올리브영','에뛰드하우스','올리브영','아리따움','꼬부기','에뛰드','.','ㅎ','옥션','홈쇼핑','미미박스','미샤','이니스프리/오프라인','롭스','아리따움','올리브영','올리브영','인터넷면세점','에뛰드하우스','롯데면세점','올리브영','백화점 메이크업포레버','올리브영','11번가','온라인:에뛰드/오프라인:시코르','에뛰드','네이쳐리퍼블릭 온라인 공식스토어','올리브영','올리브영','롯데백화점','에뛰드하우스','올리브영','스와니코코','이니스프리','11번가','롭스','미샤','g마켓','올리브영','더페이스샵','안샀음','맥 MAC','아리따움/스카이007','올리브영','올리브영','올리브영','11번가','이니스프리','미샤','지마켓','더페이스샵','에뛰드하우스','올리브영에서 사요','삐아','디올','올리브영','올리브영','G-market','올리브영','올리브영','G마켓','미샤','네이버쇼핑','올리브영','페리페라 온라인 \n미샤 온라인','메이크웨이크','색조화장품 안씀','미샤 글로시 아이섀도','올리브영','올리브영','올리브영','홀리카','11번가','아이소이','아모레퍼시픽몰','현대홈쇼핑','쿠팡','네이처리퍼블릭','네이버몰 스텔라 아이셰도','백화점','맥','메이블린마스카라(쿠팡)','에뛰드하우스 면세점 올리브영','이니스프리','쿠팡','미샤','올리브영','에스쁘아','올리브영','올리브영','아리따움','신라인터넷면세점','지마켓','이니스프리/위메프','포렌코즈','롯데백화점','11번가','토니모리 / 위메프','면세점','몬스터','디올','아리따움','더바디샾','스킨푸드.미샤','신세계몰','미샤/11번가','지마켓','롯데닷컴','올리브영','미샤 더샘','오리브영','캔메이크/쿠팡','블리블리','아모레퍼시픽몰','아리따움','뷰티넷','11번가','플러스1000','아리따움','올리브영','올리브영','Prpl','올리브영','면세점 임블리','롭스/미샤공식온라인스토어','프러스천','샤넬','올리브 영','투포쿨스쿨 쉐이딩','미미박스','올리브영','올리브영','네이처리퍼블릭','입생로랑','올리브영','G마켓','더쌤몰','올리브영','올리브영','없음','면세점','피치씨','아리따움','왓슨','올리브영','에뛰드하우스','아리따움','/마몽드','아리따움','g마켓','헤라','부평 지하상가','올리브영','올리브영','토니모리','3ce','이니스프리','네오팜','올리브영','백화점 지마켓','에뛰드하우스','신세계백화점','쿠팡','네이처리퍼블릭','다이소','나스','이니스프리','지마켓','클리오','에뛰드','미샤','이니스프리','신세계백화점','신세계백화점','없음','올리브영','올리브영.','롯데백화점 입생로랑','gs샵','에뛰드하우스','쿠팡, 우먼스톡, 네이버 검색','메이크업포레버','클럽클리오','이니스프리','클리오','이니스프리','스킨푸드.11번가','올리브영','리스킨','면세점','아리따움 / 올리브영 / 에뛰드하우스','아리따움','올리브영','설화수','미샤라인에디션','색조 사용안함','아리따움','sk-2','클리오','더페이스샵','홈앤쇼핑','미샤','롭스,올리브영','입생로랑','티몬','아리따움','더페이스샵','맥 (오프라인 매장)','옥션','올리브영','올리브영','러쉬','시코르','이니스프리','에스쁘아 네이버쇼핑','11번가','입생로랑.']
#print(test_raw)
print('데이터의 전체 수')
len(test_raw)

test = list(set(test_raw))
test.sort()
#print(test)

ngram_dict = {}
for market in test:
    ngram_elm = {}
    for market2 in test:
        ngram_elm[market2] = ngram.NGram.compare(market,market2)
    ngram_dict[market] = ngram_elm
    
#pd.DataFrame.from_dict(ngram_dict, orient='index').to_excel('c:/users/leevi/downloads/heatmap.xlsx')

more_than_score = {}
for key,value in ngram_dict.items():
    more_than_score_sub = []
    for oneword_key, oneword_value in value.items() :
        if float(oneword_value) >= 0.2 :
            more_than_score_sub.append(oneword_key)
            #print(more_than_score_sub)
        else :
            pass
        more_than_score[key] = more_than_score_sub
#print(more_than_score)

#taget 정하기 위해 이거 먼저 해야 함 
#pd.DataFrame.from_dict(more_than_score, orient='index').to_excel('c:/users/leevi/downloads/whats_same_word.xlsx')
#print('이 결과값을 바탕으로 target 단어 추출해야함 -> test2로 고고')

target = ['/마몽드','11번가','3ce','Ak몰','CJ mall','G-market','G마켓','px','sk-2','나스','네오팜','네이버쇼핑','네이처리퍼블릭','다이소','더 페이스샵','더바디샵','더쌤몰','디올','러쉬','롭스','롯데닷컴','롯데면세점','맥','메이크업포레버','메이크웨이크','면세점','몬스터','미미박스','미샤','백화점','부평 지하상가','뷰티넷','뷰티포인트몰','블리블리','비욘드','삐아','색조 사용안함','샤넬','설화수','스와니코코','시코르','신세계몰','아리따움','아마존','아이소이','에뛰드하우스','에스쁘아','올리브영','왓슨','위메프','이니스프리','이마트 트레이더스','입생로랑','쿠팡','클리오','토니모리','티몬','포렌코즈','프러스천','플러스1000','피치씨','헤라','홀리카홀리카','홈쇼핑']
print('target 단어를 다음과 같이 선정함~')

target_dict = {tg:more_than_score[tg] for tg in target}

replaced_list = []
for key, value in target_dict.items():
    for one_word in test_raw:
        if one_word in value :
            replaced_list.append(key)
        else :
            pass

word_cnt = {word:replaced_list.count(word) for word in list(set(replaced_list))}
pd.DataFrame.from_dict(word_cnt,orient='index').to_excel('c:/users/leevi/downloads/word_count_result.xlsx')
print('선정한 단어 기준으로 count 함. 저장완료')


